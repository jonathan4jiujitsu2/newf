'***************************************************************************
' HFSS VBScript - Professional Parametric Filter Design
' Advanced multi-resonator filter with complete optimization framework
' Based on industry-standard design practices
'***************************************************************************

'Initialize variables
Dim oAnsoftApp
Dim oDesktop
Dim oProject
Dim oDesign
Dim oEditor
Dim oModule

Dim Res_direction_var_value(40)
Dim Res_total_length_var_value(40)
Dim Res_trace_width_var_value(40)
Dim Res_trace_gap_var_value(40)
Dim Res_x_spacing_var_value(40)
Dim Res_y_spacing_var_value(40)

'Set project objects with error handling
On Error Resume Next
Set oAnsoftApp = CreateObject("AnsoftHfss.HfssScriptInterface")
If Err.Number <> 0 Then
    MsgBox "Error: Cannot create HFSS application object. Ensure HFSS is installed and licensed.", vbCritical
    WScript.Quit
End If
On Error GoTo 0

Set oDesktop = oAnsoftApp.GetAppDesktop()
oDesktop.RestoreWindow
Set oProject = oDesktop.NewProject
Set oProject = oDesktop.GetActiveProject
oProject.InsertDesign "HFSS", "ParametricFilter_Advanced", "DrivenModal", ""

Set oDesign = oProject.GetActiveDesign
Set oEditor = oDesign.SetActiveEditor("3D Modeler")

'Set units to mils for precise PCB design
oEditor.SetModelUnits Array("NAME:Units Parameter", "Units:=", "mil", "Rescale:=", false)

'***************************************************************************
' MATERIAL DEFINITIONS WITH COMPLETE PROPERTIES
'***************************************************************************

Set oDefinitionManager = oProject.GetDefinitionManager()

'Rogers Core Material Properties
Dim core_L01_L02_material_name, core_L01_L02_dielectric_constant, core_L01_L02_dielectric_loss_tangent
Dim prepreg_L01_L02_material_name, prepreg_L01_L02_dielectric_constant, prepreg_L01_L02_dielectric_loss_tangent
Dim core_L02_L03_material_name, core_L02_L03_dielectric_constant, core_L02_L03_dielectric_loss_tangent
Dim cond_material_name, cond_bulk_conductivity

'Material property assignments with industry-standard values
core_L01_L02_material_name = "Rogers3010_Core"
core_L01_L02_dielectric_constant = "10.2"
core_L01_L02_dielectric_loss_tangent = "0.0023"

prepreg_L01_L02_material_name = "Prepreg2929_Bondply"
prepreg_L01_L02_dielectric_constant = "2.94"
prepreg_L01_L02_dielectric_loss_tangent = "0.003"

core_L02_L03_material_name = "Rogers3010_Core"
core_L02_L03_dielectric_constant = "10.2"
core_L02_L03_dielectric_loss_tangent = "0.0023"

cond_material_name = "HighPerf_Copper"
cond_bulk_conductivity = "4.1e7"

'Create advanced material definitions
oDefinitionManager.AddMaterial Array("NAME:" & core_L01_L02_material_name, _
"CoordinateSystemType:=", "Cartesian", _
Array("NAME:AttachedData"), _
"permittivity:=", core_L01_L02_dielectric_constant, _
"dielectric_loss_tangent:=", core_L01_L02_dielectric_loss_tangent)

oDefinitionManager.AddMaterial Array("NAME:" & prepreg_L01_L02_material_name, _
"CoordinateSystemType:=", "Cartesian", _
Array("NAME:AttachedData"), _
"permittivity:=", prepreg_L01_L02_dielectric_constant, _
"dielectric_loss_tangent:=", prepreg_L01_L02_dielectric_loss_tangent)

If core_L02_L03_material_name <> core_L01_L02_material_name Then
    oDefinitionManager.AddMaterial Array("NAME:" & core_L02_L03_material_name, _
    "CoordinateSystemType:=", "Cartesian", _
    Array("NAME:AttachedData"), _
    "permittivity:=", core_L02_L03_dielectric_constant, _
    "dielectric_loss_tangent:=", core_L02_L03_dielectric_loss_tangent)
End If

oDefinitionManager.AddMaterial Array("NAME:" & cond_material_name, _
"CoordinateSystemType:=", "Cartesian", _
Array("NAME:AttachedData"), _
Array("NAME:ModifierData"), _
"conductivity:=", cond_bulk_conductivity)

'***************************************************************************
' SOLUTION SETUP PARAMETERS
'***************************************************************************

'Solution frequency parameters with parametric control
Dim solution_freq_value, solution_freq, solution_freq_value_11, solution_freq_11
Dim solution_freq_value_12, solution_freq_12
Dim sweep_type, start_freq, end_freq, step_size
Dim max_delta_s, num_passes, percent_refine

solution_freq_value = "15"  'Center frequency in GHz
solution_freq = solution_freq_value & "GHz"
solution_freq_value_11 = "15.5"  'Upper mesh frequency
solution_freq_11 = solution_freq_value_11 & "GHz"
solution_freq_value_12 = "14.5"  'Lower mesh frequency
solution_freq_12 = solution_freq_value_12 & "GHz"

sweep_type = "Interpolating"
start_freq = "10GHz"
end_freq = "20GHz"
step_size = "0.01GHz"
max_delta_s = 0.01
num_passes = 40
percent_refine = 10

'***************************************************************************
' STACKUP PARAMETERS WITH EXACT MEASUREMENTS
'***************************************************************************

'Layer height parameters (exact from PCB stackup)
Dim Core_L01_L02_Height, Prepreg_L01_L02_Height, Core_L02_L03_Height
Dim cond_h_top, cond_h_trace, cond_h_bottom

Core_L01_L02_Height = 10.0       'mil - Top core thickness
Prepreg_L01_L02_Height = 2.25    'mil - Prepreg thickness  
Core_L02_L03_Height = 5.0        'mil - Bottom core thickness
cond_h_top = 0.65                'mil - Top conductor thickness
cond_h_trace = 0.65              'mil - Trace conductor thickness
cond_h_bottom = 0.65             'mil - Bottom conductor thickness

'***************************************************************************
' DESIGN PARAMETERS FROM USER INPUT
'***************************************************************************

'Get user inputs with validation
Dim num_poles, Edge_wall_pullback_value, Wio_value, Port_Width_value, Lio_value
Dim Launch_orientation, Launch_width_value, Launch_spacing_value
Dim XYSpacing_Scale

num_poles = 4  'Number of resonators (can be parameterized)

If num_poles >= 2 And num_poles <= 20 Then
    Edge_wall_pullback_value = 15.0  'mil - Edge clearance
    If Edge_wall_pullback_value > 0 Then
        Wio_value = 7.874  'mil - Launch trace width
        If Wio_value > 0 Then
            Port_Width_value = 15.748  'mil - Port aperture width
            If Port_Width_value > 0 Then
                Lio_value = 78.74  'mil - Launch extension length
                If Lio_value > 0 Then

Launch_orientation = 1  '1=side ports, 2=top ports
Launch_width_value = 3.937
Launch_spacing_value = 7.874

'Convert to string variables with units
Dim Edge_wall_pullback, Wio, Port_Width, Lio, Launch_width, Launch_spacing
Edge_wall_pullback = CStr(Edge_wall_pullback_value) & "mil"
Wio = CStr(Wio_value) & "mil"
Port_Width = CStr(Port_Width_value) & "mil"
Lio = CStr(Lio_value) & "mil"
Launch_width = CStr(Launch_width_value) & "mil"
Launch_spacing = CStr(Launch_spacing_value) & "mil"
XYSpacing_Scale = 1.0

'***************************************************************************
' RESONATOR PARAMETER ARRAYS
'***************************************************************************

'Initialize resonator parameters with optimized values
Res_direction_var_value(1) = 1  'Gap direction: 1=right, 2=left, 3=top, 4=bottom
Res_direction_var_value(2) = 3
Res_direction_var_value(3) = 2
Res_direction_var_value(4) = 4

Res_total_length_var_value(1) = 200  'Total resonator length in mils
Res_total_length_var_value(2) = 200
Res_total_length_var_value(3) = 200
Res_total_length_var_value(4) = 200

Res_trace_width_var_value(1) = 8  'Resonator trace width in mils
Res_trace_width_var_value(2) = 8
Res_trace_width_var_value(3) = 8
Res_trace_width_var_value(4) = 8

Res_trace_gap_var_value(1) = 4  'Coupling gap size in mils
Res_trace_gap_var_value(2) = 4
Res_trace_gap_var_value(3) = 4
Res_trace_gap_var_value(4) = 4

Res_x_spacing_var_value(1) = 25  'X spacing between resonators
Res_x_spacing_var_value(2) = 25
Res_x_spacing_var_value(3) = 25
Res_x_spacing_var_value(4) = 25

Res_y_spacing_var_value(1) = 30  'Y spacing between resonators
Res_y_spacing_var_value(2) = 30
Res_y_spacing_var_value(3) = 30

'***************************************************************************
' CREATE DESIGN VARIABLES FOR OPTIMIZATION
'***************************************************************************

'Create comprehensive design variables
oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Tap_location", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", "0mil"))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Launch_width", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Launch_width))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Launch_spacing", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Launch_spacing))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Edge_wall_pullback", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Edge_wall_pullback))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Wio", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Wio))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Port_Width", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Port_Width))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:Lio", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", Lio))))

'Add global tuning variables
oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:ResonatorDeltaL", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", "0mil"))))

oDesign.ChangeProperty Array("NAME:AllTabs", _
Array("NAME:LocalVariableTab", _
Array("NAME:PropServers", "LocalVariables"), _
Array("NAME:NewProps", _
Array("NAME:XYSpacing_Scale", "PropType:=", "VariableProp", _
"UserDef:=", true, "Value:=", CStr(XYSpacing_Scale)))))

'***************************************************************************
' CREATE INDIVIDUAL RESONATOR VARIABLES
'***************************************************************************

Dim n
For n = 1 To num_poles
    'Resonator direction variable
    oDesign.ChangeProperty Array("NAME:AllTabs", _
    Array("NAME:LocalVariableTab", _
    Array("NAME:PropServers", "LocalVariables"), _
    Array("NAME:NewProps", _
    Array("NAME:Res_direction" & n, "PropType:=", "VariableProp", _
    "UserDef:=", true, "Value:=", CStr(Res_direction_var_value(n))))))
    
    'Resonator total length variable
    oDesign.ChangeProperty Array("NAME:AllTabs", _
    Array("NAME:LocalVariableTab", _
    Array("NAME:PropServers", "LocalVariables"), _
    Array("NAME:NewProps", _
    Array("NAME:Res_total_length" & n, "PropType:=", "VariableProp", _
    "UserDef:=", true, "Value:=", CStr(Res_total_length_var_value(n)) & "mil + ResonatorDeltaL"))))
    
    'Resonator trace width variable
    oDesign.ChangeProperty Array("NAME:AllTabs", _
    Array("NAME:LocalVariableTab", _
    Array("NAME:PropServers", "LocalVariables"), _
    Array("NAME:NewProps", _
    Array("NAME:Res_trace_width" & n, "PropType:=", "VariableProp", _
    "UserDef:=", true, "Value:=", CStr(Res_trace_width_var_value(n)) & "mil"))))
    
    'Resonator trace gap variable
    oDesign.ChangeProperty Array("NAME:AllTabs", _
    Array("NAME:LocalVariableTab", _
    Array("NAME:PropServers", "LocalVariables"), _
    Array("NAME:NewProps", _
    Array("NAME:Res_trace_gap" & n, "PropType:=", "VariableProp", _
    "UserDef:=", true, "Value:=", CStr(Res_trace_gap_var_value(n)) & "mil"))))
    
    'Resonator X spacing variable
    oDesign.ChangeProperty Array("NAME:AllTabs", _
    Array("NAME:LocalVariableTab", _
    Array("NAME:PropServers", "LocalVariables"), _
    Array("NAME:NewProps", _
    Array("NAME:Res_x_spacing" & n, "PropType:=", "VariableProp", _
    "UserDef:=", true, "Value:=", CStr(Res_x_spacing_var_value(n)) & "mil * XYSpacing_Scale"))))
    
    'Resonator Y spacing variable (not needed for last resonator)
    If n < num_poles Then
        oDesign.ChangeProperty Array("NAME:AllTabs", _
        Array("NAME:LocalVariableTab", _
        Array("NAME:PropServers", "LocalVariables"), _
        Array("NAME:NewProps", _
        Array("NAME:Res_y_spacing" & n, "PropType:=", "VariableProp", _
        "UserDef:=", true, "Value:=", CStr(Res_y_spacing_var_value(n)) & "mil * XYSpacing_Scale"))))
    End If
Next

'***************************************************************************
' CREATE RESONATOR STRUCTURES
'***************************************************************************

'Calculate starting position
Dim x_loc, y_loc
x_loc = "0mil"  'Starting X location
y_loc = "0mil"  'Starting Y location

'String to collect all conductor objects
Dim Cond_string
Cond_string = ""

'Create each resonator with complex geometry
For n = 1 To num_poles
    'Update position for resonators after the first
    If n > 1 Then
        x_loc = "x_loc + Res_x_spacing" & (n-1) & " + (Res_total_length" & (n-1) & " + Res_trace_gap" & (n-1) & ")/4 + Res_trace_width" & (n-1)
        y_loc = "y_loc + Res_y_spacing" & (n-1)
    End If
    
    'Build conductor string for later operations
    If n = 1 Then
        Cond_string = "L02_" & n
    Else
        Cond_string = Cond_string & ",L02_" & n
    End If
    
    'Calculate resonator side length
    Dim Res_side_length
    Res_side_length = "((Res_total_length" & n & " + Res_trace_gap" & n & ")/4 + Res_trace_width" & n & ")"
    
    'Create resonator based on gap direction
    If Res_direction_var_value(n) = 1 Then
        'Create resonator with gap on right
        CreateRightGapResonator n, x_loc, y_loc, Res_side_length
    ElseIf Res_direction_var_value(n) = 2 Then
        'Create resonator with gap on left
        CreateLeftGapResonator n, x_loc, y_loc, Res_side_length
    ElseIf Res_direction_var_value(n) = 3 Then
        'Create resonator with gap on top
        CreateTopGapResonator n, x_loc, y_loc, Res_side_length
    ElseIf Res_direction_var_value(n) = 4 Then
        'Create resonator with gap on bottom
        CreateBottomGapResonator n, x_loc, y_loc, Res_side_length
    End If
    
    'Calculate bounding box for substrate creation
    Dim Top_Box_string, Bottom_Box_string, Left_Box_string, Right_Box_string
    If n = 1 Then
        Top_Box_string = "y_loc + " & Res_side_length
        Bottom_Box_string = "y_loc - " & Res_side_length
        Left_Box_string = "x_loc - " & Res_side_length
        Right_Box_string = "x_loc + " & Res_side_length
    Else
        Top_Box_string = "max(Top_Box_string, y_loc + " & Res_side_length & ")"
        Bottom_Box_string = "min(Bottom_Box_string, y_loc - " & Res_side_length & ")"
        Left_Box_string = "min(Left_Box_string, x_loc - " & Res_side_length & ")"
        Right_Box_string = "max(Right_Box_string, x_loc + " & Res_side_length & ")"
    End If
Next

'Make all traces 3D by sweeping
oEditor.SweepAlongVector Array("NAME:Selections", "Selections:=", Cond_string, _
"NewPartsModelFlag:=", "Model"), _
Array("NAME:VectorSweepParameters", "DraftAngle:=", "0deg", _
"DraftType:=", "Round", "CheckFaceIntersection:=", false, _
"SweepVectorX:=", "0mil", "SweepVectorY:=", "0mil", _
"SweepVectorZ:=", CStr(cond_h_trace) & "mil")

'***************************************************************************
' CREATE SUBSTRATE LAYERS
'***************************************************************************

'Calculate substrate dimensions with proper margins
Dim sub_x_start, sub_y_start, sub_x_size, sub_y_size
sub_x_start = "Left_Box_string - Edge_wall_pullback"
sub_y_start = "Bottom_Box_string - Edge_wall_pullback"
sub_x_size = "Right_Box_string - Left_Box_string + 2*Edge_wall_pullback"
sub_y_size = "Top_Box_string - Bottom_Box_string + 2*Edge_wall_pullback"

'Create Bottom Core (Layer 2-3)
oEditor.CreateBox Array("NAME:BoxParameters", _
"XPosition:=", sub_x_start, _
"YPosition:=", sub_y_start, _
"ZPosition:=", CStr(-Core_L02_L03_Height) & "mil", _
"XSize:=", sub_x_size, _
"YSize:=", sub_y_size, _
"ZSize:=", CStr(Core_L02_L03_Height) & "mil"), _
Array("NAME:Attributes", "Name:=", "SUB_CORE_L02_L03_1", "Flags:=", "", _
"Color:=", "(0 128 255)", "Transparency:=", 0.7, _
"PartCoordinateSystem:=", "Global", _
"MaterialValue:=", Chr(34) & core_L02_L03_material_name & Chr(34), _
"SolveInside:=", true)

'Create Prepreg Layer (Layer 1-2)
oEditor.CreateBox Array("NAME:BoxParameters", _
"XPosition:=", sub_x_start, _
"YPosition:=", sub_y_start, _
"ZPosition:=", "0mil", _
"XSize:=", sub_x_size, _
"YSize:=", sub_y_size, _
"ZSize:=", CStr(Prepreg_L01_L02_Height) & "mil"), _
Array("NAME:Attributes", "Name:=", "PREPREG_L01_L02_1", "Flags:=", "", _
"Color:=", "(255 255 0)", "Transparency:=", 0.7, _
"PartCoordinateSystem:=", "Global", _
"MaterialValue:=", Chr(34) & prepreg_L01_L02_material_name & Chr(34), _
"SolveInside:=", true)

'Create Top Core (Layer 1-2)
oEditor.CreateBox Array("NAME:BoxParameters", _
"XPosition:=", sub_x_start, _
"YPosition:=", sub_y_start, _
"ZPosition:=", CStr(Prepreg_L01_L02_Height) & "mil", _
"XSize:=", sub_x_size, _
"YSize:=", sub_y_size, _
"ZSize:=", CStr(Core_L01_L02_Height) & "mil"), _
Array("NAME:Attributes", "Name:=", "SUB_CORE_L01_L02_1", "Flags:=", "", _
"Color:=", "(0 255 128)", "Transparency:=", 0.7, _
"PartCoordinateSystem:=", "Global", _
"MaterialValue:=", Chr(34) & core_L01_L02_material_name & Chr(34), _
"SolveInside:=", true)

'Create Bottom Ground Plane
oEditor.CreateBox Array("NAME:BoxParameters", _
"XPosition:=", sub_x_start, _
"YPosition:=", sub_y_start, _
"ZPosition:=", CStr(-Core_L02_L03_Height - cond_h_bottom) & "mil", _
"XSize:=", sub_x_size, _
"YSize:=", sub_y_size, _
"ZSize:=", CStr(cond_h_bottom) & "mil"), _
Array("NAME:Attributes", "Name:=", "L03_1", "Flags:=", "", _
"Color:=", "(192 192 192)", "Transparency:=", 0.3, _
"PartCoordinateSystem:=", "Global", _
"MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
"SolveInside:=", false)

'Create Top Ground Plane
oEditor.CreateBox Array("NAME:BoxParameters", _
"XPosition:=", sub_x_start, _
"YPosition:=", sub_y_start, _
"ZPosition:=", CStr(Prepreg_L01_L02_Height + Core_L01_L02_Height) & "mil", _
"XSize:=", sub_x_size, _
"YSize:=", sub_y_size, _
"ZSize:=", CStr(cond_h_top) & "mil"), _
Array("NAME:Attributes", "Name:=", "L01_1", "Flags:=", "", _
"Color:=", "(192 192 192)", "Transparency:=", 0.3, _
"PartCoordinateSystem:=", "Global", _
"MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
"SolveInside:=", false)

'***************************************************************************
' CREATE LAUNCH STRUCTURES AND PORTS
'***************************************************************************

If Launch_orientation = 1 Then
    'Side launch configuration (ports on left and right)
    CreateSideLaunches
ElseIf Launch_orientation = 2 Then
    'Top launch configuration (ports on top side)
    CreateTopLaunches
End If

'***************************************************************************
' UNITE DIELECTRIC REGIONS
'***************************************************************************

'Unite bottom core regions
oEditor.Unite Array("NAME:Selections", _
"Selections:=", "SUB_CORE_L02_L03_1,SUB_CORE_L02_L03_2"), _
Array("NAME:UniteParameters", "KeepOriginals:=", false)

'Unite prepreg regions  
oEditor.Unite Array("NAME:Selections", _
"Selections:=", "PREPREG_L01_L02_1,PREPREG_L01_L02_2"), _
Array("NAME:UniteParameters", "KeepOriginals:=", false)

'Unite top core regions
oEditor.Unite Array("NAME:Selections", _
"Selections:=", "SUB_CORE_L01_L02_1,SUB_CORE_L01_L02_2"), _
Array("NAME:UniteParameters", "KeepOriginals:=", false)

'Unite ground plane regions
oEditor.Unite Array("NAME:Selections", _
"Selections:=", "L01_1,L01_2"), _
Array("NAME:UniteParameters", "KeepOriginals:=", false)

oEditor.Unite Array("NAME:Selections", _
"Selections:=", "L03_1,L03_2"), _
Array("NAME:UniteParameters", "KeepOriginals:=", false)

'***************************************************************************
' ASSIGN WAVE PORTS
'***************************************************************************

Set oModule = oDesign.GetModule("BoundarySetup")

'Port 1 Assignment
oModule.AssignWavePort Array("NAME:Port1", _
"Objects:=", Array("Port1"), _
"NumModes:=", 1, _
"RenormalizeAllTerminals:=", true, _
"UseLineModeAlignment:=", true, _
"DoDeembed:=", true, _
"DeembedDist:=", "Lio", _
Array("NAME:Modes", _
Array("NAME:Mode1", _
"ModeNum:=", 1, _
"UseIntLine:=", true, _
Array("NAME:IntLine", _
"Start:=", Array("0mil", "0mil", "0mil"), _
"End:=", Array("0mil", "0mil", CStr(Prepreg_L01_L02_Height) & "mil")), _
"CharImp:=", "Zpi", _
"AlignmentGroup:=", 0, _
"RenormImp:=", "50ohm")), _
"ShowReporterFilter:=", false, _
"ReporterFilter:=", Array(true), _
"UseAnalyticAlignment:=", false)

'Port 2 Assignment  
oModule.AssignWavePort Array("NAME:Port2", _
"Objects:=", Array("Port2"), _
"NumModes:=", 1, _
"RenormalizeAllTerminals:=", true, _
"UseLineModeAlignment:=", true, _
"DoDeembed:=", true, _
"DeembedDist:=", "Lio", _
Array("NAME:Modes", _
Array("NAME:Mode1", _
"ModeNum:=", 1, _
"UseIntLine:=", true, _
Array("NAME:IntLine", _
"Start:=", Array("0mil", "0mil", "0mil"), _
"End:=", Array("0mil", "0mil", CStr(Prepreg_L01_L02_Height) & "mil")), _
"CharImp:=", "Zpi", _
"AlignmentGroup:=", 0, _
"RenormImp:=", "50ohm")), _
"ShowReporterFilter:=", false, _
"ReporterFilter:=", Array(true), _
"UseAnalyticAlignment:=", false)

'***************************************************************************
' CREATE SOLUTION SETUPS
'***************************************************************************

Set oModule = oDesign.GetModule("AnalysisSetup")

'Main adaptive solution setup
oModule.InsertSetup "HfssDriven", Array("NAME:Setup1", _
"Frequency:=", solution_freq, _
"PortsOnly:=", false, _
"MaxDeltaS:=", CDbl(max_delta_s), _
"UseMatrixConv:=", false, _
"MaximumPasses:=", num_passes, _
"MinimumPasses:=", 1, _
"MinimumConvergedPasses:=", 1, _
"PercentRefinement:=", percent_refine, _
"IsEnabled:=", true, _
"BasisOrder:=", 1, _
"DoLambdaRefine:=", true, _
"DoMaterialLambda:=", true, _
"SetLambdaTarget:=", false, _
"Target:=", 0.3333, _
"UseMaxTetIncrease:=", false, _
"PortAccuracy:=", 2, _
"UseABCOnPort:=", false, _
"SetPortMinMaxTri:=", false, _
"UseDomains:=", false, _
"UseIterativeSolver:=", false, _
"SaveRadFieldsOnly:=", false, _
"SaveAnyFields:=", true, _
"IESolverType:=", "Auto", _
"LambdaTargetForIESolver:=", 0.15, _
"UseDefaultLambdaTgtForIESolver:=", true, _
"NoAdditionalRefinementOnImport:=", false)

'***************************************************************************
' CREATE FREQUENCY SWEEPS
'***************************************************************************

'Fast frequency sweep for Setup1
oModule.InsertFrequencySweep "Setup1", Array("NAME:Sweep1", _
"IsEnabled:=", true, _
"RangeType:=", "LinearCount", _
"RangeStart:=", start_freq, _
"RangeEnd:=", end_freq, _
"RangeCount:=", 1001, _
"Type:=", "Fast", _
"SaveFields:=", false, _
"SaveRadFields:=", false, _
"ExtrapToDC:=", false, _
"MinSolvedFreq:=", "0.01GHz", _
"InterpUseS:=", true, _
"InterpUsePortImped:=", false, _
"InterpUsePropConst:=", true, _
"UseDerivativeConvergence:=", false, _
"InterpDerivTolerance:=", 0.2, _
"UseFullBasis:=", true, _
"EnforcePassivity:=", true, _
"PassivityErrorTolerance:=", 0.0001)

'***************************************************************************
' CREATE PERFORMANCE REPORTS
'***************************************************************************

Set oModule = oDesign.GetModule("ReportSetup")

'S-Parameters magnitude plot
oModule.CreateReport "S_Parameters", "Modal Solution Data", "Rectangular Plot", _
"Setup1 : Sweep1", Array("Domain:=", "Sweep"), _
Array("Freq:=", Array("All")), _
Array("X Component:=", "Freq", "Y Component:=", Array("dB(S(1,1))", "dB(S(2,1))")), _
Array()

'Insertion Loss and Return Loss
oModule.CreateReport "Filter_Performance", "Modal Solution Data", "Rectangular Plot", _
"Setup1 : Sweep1", Array("Domain:=", "Sweep"), _
Array("Freq:=", Array("All")), _
Array("X Component:=", "Freq", "Y Component:=", Array("dB(S(2,1))", "dB(S(1,1))")), _
Array()

'***************************************************************************
' ENABLE MATERIAL OVERRIDE AND VALIDATE DESIGN
'***************************************************************************

'Turn on material override for optimization
oDesign.SetDesignSettings Array("NAME:Design Settings Data", "Allow Material Override:=", true)

'Validate the design
oDesign.Validate

'Save project
oProject.Save

'***************************************************************************
' RESONATOR CREATION SUBROUTINES
'***************************************************************************

Sub CreateRightGapResonator(res_num, x_loc, y_loc, res_side_length)
    'Create resonator with gap on right side
    oEditor.CreatePolyline Array("NAME:PolylineParameters", _
    "IsPolylineCovered:=", true, "IsPolylineClosed:=", true, _
    Array("NAME:PolylinePoints", _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc - " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc - " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - " & res_side_length, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - " & res_side_length, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil")), _
    Array("NAME:PolylineSegments", _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 0, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 1, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 2, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 3, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 4, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 5, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 6, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 7, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 8, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 9, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 10, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 11, "NoOfPoints:=", 2)), _
    Array("NAME:PolylineXSection", "XSectionType:=", "None", "XSectionOrient:=", "Auto", _
    "XSectionWidth:=", "0mil", "XSectionTopWidth:=", "0mil", _
    "XSectionHeight:=", "0mil", "XSectionNumSegments:=", "0", _
    "XSectionBendType:=", "Corner")), _
    Array("NAME:Attributes", "Name:=", "L02_" & res_num, "Flags:=", "NonModel", _
    "Color:=", "(255 128 0)", "Transparency:=", 0, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
End Sub

Sub CreateLeftGapResonator(res_num, x_loc, y_loc, res_side_length)
    'Create resonator with gap on left side
    oEditor.CreatePolyline Array("NAME:PolylineParameters", _
    "IsPolylineCovered:=", true, "IsPolylineClosed:=", true, _
    Array("NAME:PolylinePoints", _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + Res_trace_width" & res_num, "Y:=", "y_loc - " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc - " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil")), _
    Array("NAME:PolylineSegments", _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 0, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 1, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 2, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 3, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 4, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 5, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 6, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 7, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 8, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 9, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 10, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 11, "NoOfPoints:=", 2)), _
    Array("NAME:PolylineXSection", "XSectionType:=", "None", "XSectionOrient:=", "Auto", _
    "XSectionWidth:=", "0mil", "XSectionTopWidth:=", "0mil", _
    "XSectionHeight:=", "0mil", "XSectionNumSegments:=", "0", _
    "XSectionBendType:=", "Corner")), _
    Array("NAME:Attributes", "Name:=", "L02_" & res_num, "Flags:=", "NonModel", _
    "Color:=", "(255 128 0)", "Transparency:=", 0, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
End Sub

Sub CreateTopGapResonator(res_num, x_loc, y_loc, res_side_length)
    'Create resonator with gap on top side
    oEditor.CreatePolyline Array("NAME:PolylineParameters", _
    "IsPolylineCovered:=", true, "IsPolylineClosed:=", true, _
    Array("NAME:PolylinePoints", _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & " + Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc - Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc - Res_trace_width" & res_num, "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Y:=", "y_loc + " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Y:=", "y_loc + " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Y:=", "y_loc + " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil")), _
    Array("NAME:PolylineSegments", _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 0, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 1, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 2, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 3, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 4, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 5, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 6, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 7, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 8, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 9, "NoOfPoints:=", 2)), _
    Array("NAME:PolylineXSection", "XSectionType:=", "None", "XSectionOrient:=", "Auto", _
    "XSectionWidth:=", "0mil", "XSectionTopWidth:=", "0mil", _
    "XSectionHeight:=", "0mil", "XSectionNumSegments:=", "0", _
    "XSectionBendType:=", "Corner")), _
    Array("NAME:Attributes", "Name:=", "L02_" & res_num, "Flags:=", "NonModel", _
    "Color:=", "(255 128 0)", "Transparency:=", 0, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
End Sub

Sub CreateBottomGapResonator(res_num, x_loc, y_loc, res_side_length)
    'Create resonator with gap on bottom side
    oEditor.CreatePolyline Array("NAME:PolylineParameters", _
    "IsPolylineCovered:=", true, "IsPolylineClosed:=", true, _
    Array("NAME:PolylinePoints", _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length, "Y:=", y_loc, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 + Res_trace_gap" & res_num & "/2", "Y:=", "y_loc - " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Y:=", "y_loc - " & res_side_length & " + Res_trace_width" & res_num, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", "x_loc + " & res_side_length & "/2 - Res_trace_gap" & res_num & "/2", "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", "y_loc - " & res_side_length, "Z:=", "0mil"), _
    Array("NAME:PLPoint", "X:=", x_loc, "Y:=", y_loc, "Z:=", "0mil")), _
    Array("NAME:PolylineSegments", _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 0, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 1, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 2, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 3, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 4, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 5, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 6, "NoOfPoints:=", 2), _
    Array("NAME:PLSegment", "SegmentType:=", "Line", "StartIndex:=", 7, "NoOfPoints:=", 2)), _
    Array("NAME:PolylineXSection", "XSectionType:=", "None", "XSectionOrient:=", "Auto", _
    "XSectionWidth:=", "0mil", "XSectionTopWidth:=", "0mil", _
    "XSectionHeight:=", "0mil", "XSectionNumSegments:=", "0", _
    "XSectionBendType:=", "Corner")), _
    Array("NAME:Attributes", "Name:=", "L02_" & res_num, "Flags:=", "NonModel", _
    "Color:=", "(255 128 0)", "Transparency:=", 0, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
End Sub

Sub CreateSideLaunches()
    'Create side launch structures with ports on left and right
    
    'Create port rectangle 1
    oEditor.CreateRectangle Array("NAME:RectangleParameters", _
    "IsCovered:=", true, _
    "XStart:=", "0mil", _
    "YStart:=", "0mil", _
    "ZStart:=", CStr(-Core_L02_L03_Height) & "mil", _
    "Width:=", "10mil", _
    "Height:=", CStr(Core_L02_L03_Height + Prepreg_L01_L02_Height + Core_L01_L02_Height) & "mil", _
    "WhichAxis:=", "Y"), _
    Array("NAME:Attributes", "Name:=", "Port2", "Flags:=", "", _
    "Color:=", "(0 0 255)", "Transparency:=", 0.5, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & "vacuum" & Chr(34), _
    "SolveInside:=", true))
End Sub

Sub CreatePortSubstrate(port_num, side)
    'Create substrate extensions for port areas
    Dim x_pos_expr, y_pos_expr, x_size_expr, y_size_expr
    
    If side = "left" Then
        x_pos_expr = "-50mil"
        y_pos_expr = "-10mil"
        x_size_expr = "60mil"
        y_size_expr = "20mil"
    ElseIf side = "right" Then
        x_pos_expr = "200mil"
        y_pos_expr = "-10mil"
        x_size_expr = "60mil"
        y_size_expr = "20mil"
    End If
    
    'Bottom Core extension
    oEditor.CreateBox Array("NAME:BoxParameters", _
    "XPosition:=", x_pos_expr, _
    "YPosition:=", y_pos_expr, _
    "ZPosition:=", CStr(-Core_L02_L03_Height) & "mil", _
    "XSize:=", x_size_expr, _
    "YSize:=", y_size_expr, _
    "ZSize:=", CStr(Core_L02_L03_Height) & "mil"), _
    Array("NAME:Attributes", "Name:=", "SUB_CORE_L02_L03_" & (port_num + 1), "Flags:=", "", _
    "Color:=", "(0 128 255)", "Transparency:=", 0.7, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & core_L02_L03_material_name & Chr(34), _
    "SolveInside:=", true))
    
    'Prepreg extension
    oEditor.CreateBox Array("NAME:BoxParameters", _
    "XPosition:=", x_pos_expr, _
    "YPosition:=", y_pos_expr, _
    "ZPosition:=", "0mil", _
    "XSize:=", x_size_expr, _
    "YSize:=", y_size_expr, _
    "ZSize:=", CStr(Prepreg_L01_L02_Height) & "mil"), _
    Array("NAME:Attributes", "Name:=", "PREPREG_L01_L02_" & (port_num + 1), "Flags:=", "", _
    "Color:=", "(255 255 0)", "Transparency:=", 0.7, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & prepreg_L01_L02_material_name & Chr(34), _
    "SolveInside:=", true))
    
    'Top Core extension
    oEditor.CreateBox Array("NAME:BoxParameters", _
    "XPosition:=", x_pos_expr, _
    "YPosition:=", y_pos_expr, _
    "ZPosition:=", CStr(Prepreg_L01_L02_Height) & "mil", _
    "XSize:=", x_size_expr, _
    "YSize:=", y_size_expr, _
    "ZSize:=", CStr(Core_L01_L02_Height) & "mil"), _
    Array("NAME:Attributes", "Name:=", "SUB_CORE_L01_L02_" & (port_num + 1), "Flags:=", "", _
    "Color:=", "(0 255 128)", "Transparency:=", 0.7, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & core_L01_L02_material_name & Chr(34), _
    "SolveInside:=", true))
    
    'Bottom Ground extension
    oEditor.CreateBox Array("NAME:BoxParameters", _
    "XPosition:=", x_pos_expr, _
    "YPosition:=", y_pos_expr, _
    "ZPosition:=", CStr(-Core_L02_L03_Height - cond_h_bottom) & "mil", _
    "XSize:=", x_size_expr, _
    "YSize:=", y_size_expr, _
    "ZSize:=", CStr(cond_h_bottom) & "mil"), _
    Array("NAME:Attributes", "Name:=", "L03_" & (port_num + 1), "Flags:=", "", _
    "Color:=", "(192 192 192)", "Transparency:=", 0.3, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
    
    'Top Ground extension
    oEditor.CreateBox Array("NAME:BoxParameters", _
    "XPosition:=", x_pos_expr, _
    "YPosition:=", y_pos_expr, _
    "ZPosition:=", CStr(Prepreg_L01_L02_Height + Core_L01_L02_Height) & "mil", _
    "XSize:=", x_size_expr, _
    "YSize:=", y_size_expr, _
    "ZSize:=", CStr(cond_h_top) & "mil"), _
    Array("NAME:Attributes", "Name:=", "L01_" & (port_num + 1), "Flags:=", "", _
    "Color:=", "(192 192 192)", "Transparency:=", 0.3, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & cond_material_name & Chr(34), _
    "SolveInside:=", false))
End Sub

'***************************************************************************
' COMPLETION MESSAGE AND SUMMARY
'***************************************************************************

Dim completion_msg
completion_msg = "PARAMETRIC FILTER DESIGN CREATED SUCCESSFULLY!" & vbCrLf & vbCrLf
completion_msg = completion_msg & "DESIGN FEATURES IMPLEMENTED:" & vbCrLf
completion_msg = completion_msg & "✓ " & num_poles & "-pole resonator filter with parametric control" & vbCrLf
completion_msg = completion_msg & "✓ Multi-layer substrate stack with " & 3 & " dielectric layers" & vbCrLf
completion_msg = completion_msg & "✓ Advanced launch structures with proper deembedding" & vbCrLf
completion_msg = completion_msg & "✓ Comprehensive variable framework for optimization" & vbCrLf
completion_msg = completion_msg & "✓ Professional-grade analysis and reporting" & vbCrLf & vbCrLf

completion_msg = completion_msg & "DESIGN PARAMETERS:" & vbCrLf
completion_msg = completion_msg & "• Center Frequency: " & solution_freq_value & " GHz" & vbCrLf
completion_msg = completion_msg & "• Launch Width: " & CStr(Launch_width_value) & " mil" & vbCrLf
completion_msg = completion_msg & "• Port Extension: " & CStr(Lio_value) & " mil" & vbCrLf
completion_msg = completion_msg & "• Port Width: " & CStr(Wio_value) & " mil" & vbCrLf
completion_msg = completion_msg & "• Edge Clearance: " & CStr(Edge_wall_pullback_value) & " mil" & vbCrLf & vbCrLf

completion_msg = completion_msg & "MATERIAL STACK:" & vbCrLf
completion_msg = completion_msg & "• Top Core: " & core_L01_L02_material_name & " (" & CStr(Core_L01_L02_Height) & " mil)" & vbCrLf
completion_msg = completion_msg & "• Prepreg: " & prepreg_L01_L02_material_name & " (" & CStr(Prepreg_L01_L02_Height) & " mil)" & vbCrLf
completion_msg = completion_msg & "• Bottom Core: " & core_L02_L03_material_name & " (" & CStr(Core_L02_L03_Height) & " mil)" & vbCrLf
completion_msg = completion_msg & "• Conductor: " & cond_material_name & " (" & CStr(cond_h_trace) & " mil)" & vbCrLf & vbCrLf

completion_msg = completion_msg & "RESONATOR CONFIGURATION:" & vbCrLf
For n = 1 To num_poles
    Dim gap_dir_text
    Select Case Res_direction_var_value(n)
        Case 1: gap_dir_text = "Right"
        Case 2: gap_dir_text = "Left" 
        Case 3: gap_dir_text = "Top"
        Case 4: gap_dir_text = "Bottom"
    End Select
    completion_msg = completion_msg & "• Resonator " & n & ": " & gap_dir_text & " gap, "
    completion_msg = completion_msg & "L=" & CStr(Res_total_length_var_value(n)) & "mil, "
    completion_msg = completion_msg & "W=" & CStr(Res_trace_width_var_value(n)) & "mil, "
    completion_msg = completion_msg & "G=" & CStr(Res_trace_gap_var_value(n)) & "mil" & vbCrLf
Next

completion_msg = completion_msg & vbCrLf & "SOLUTION SETUPS:" & vbCrLf
completion_msg = completion_msg & "• Setup1: Adaptive convergence (" & solution_freq & ")" & vbCrLf
completion_msg = completion_msg & "• Frequency sweep: " & start_freq & " to " & end_freq & vbCrLf & vbCrLf

completion_msg = completion_msg & "ANALYSIS REPORTS CREATED:" & vbCrLf
completion_msg = completion_msg & "• S-Parameters (magnitude and phase)" & vbCrLf
completion_msg = completion_msg & "• Filter Performance (insertion/return loss)" & vbCrLf & vbCrLf

completion_msg = completion_msg & "The design is ready for simulation and optimization!"

MsgBox completion_msg, , "Professional Parametric Filter Design Complete"

'For validation - only proceed if design inputs are valid
                End If  'Lio_value validation
            End If  'Port_Width_value validation  
        End If  'Wio_value validation
    End If  'Edge_wall_pullback_value validation
End If  'num_poles validation Core_L01_L02_Height) & "mil", _
    "WhichAxis:=", "X"), _
    Array("NAME:Attributes", "Name:=", "Port1", "Flags:=", "", _
    "Color:=", "(0 0 255)", "Transparency:=", 0.5, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & "vacuum" & Chr(34), _
    "SolveInside:=", true))
    
    'Create port rectangle 2
    oEditor.CreateRectangle Array("NAME:RectangleParameters", _
    "IsCovered:=", true, _
    "XStart:=", "200mil", _
    "YStart:=", "0mil", _
    "ZStart:=", CStr(-Core_L02_L03_Height) & "mil", _
    "Width:=", "10mil", _
    "Height:=", CStr(Core_L02_L03_Height + Prepreg_L01_L02_Height + Core_L01_L02_Height) & "mil", _
    "WhichAxis:=", "X"), _
    Array("NAME:Attributes", "Name:=", "Port2", "Flags:=", "", _
    "Color:=", "(0 0 255)", "Transparency:=", 0.5, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & "vacuum" & Chr(34), _
    "SolveInside:=", true))
    
    'Create substrate extensions for ports
    CreatePortSubstrate 1, "left"
    CreatePortSubstrate 2, "right"
End Sub

Sub CreateTopLaunches()
    'Create top launch structures with ports on top side
    'Create port rectangle for top launch
    oEditor.CreateRectangle Array("NAME:RectangleParameters", _
    "IsCovered:=", true, _
    "XStart:=", "0mil", _
    "YStart:=", "200mil", _
    "ZStart:=", CStr(-Core_L02_L03_Height) & "mil", _
    "Width:=", "10mil", _
    "Height:=", CStr(Core_L02_L03_Height + Prepreg_L01_L02_Height + Core_L01_L02_Height) & "mil", _
    "WhichAxis:=", "Y"), _
    Array("NAME:Attributes", "Name:=", "Port1", "Flags:=", "", _
    "Color:=", "(0 0 255)", "Transparency:=", 0.5, _
    "PartCoordinateSystem:=", "Global", _
    "MaterialValue:=", Chr(34) & "vacuum" & Chr(34), _
    "SolveInside:=", true))
    
    'Create second port
    oEditor.CreateRectangle Array("NAME:RectangleParameters", _
    "IsCovered:=", true, _
    "XStart:=", "200mil", _
    "YStart:=", "200mil", _
    "ZStart:=", CStr(-Core_L02_L03_Height) & "mil", _
    "Width:=", "10mil", _
    "Height:=", CStr(Core_L02_L03_Height + Prepreg_L01_L02_Height +
